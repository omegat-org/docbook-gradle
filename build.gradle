
plugins {
    id 'org.omegat.document-conventions'
    id 'maven-publish'
    id 'signing'
    id 'io.github.gradle-nexus.publish-plugin' version "2.0.0"
}

repositories {
    mavenCentral()
}

tasks.register('manualZips') {
    description = 'Build ZIP manuals to bundle into application. Requires container runtime.'
    group = 'documentation'
}

tasks.register('manualHtmls') {
    description = 'Build HTML manuals and zip for all languages. Requires container runtime.'
    group = 'documentation'
}

def publications = []
def manualIndexXmls = fileTree(dir: 'src/docs', include: '**/OmegaTUsersManual_xinclude_full.xml')
manualIndexXmls.each { xml -> {
    publications << makeDocumentationTasks(xml)
}}

signing {
    publications.each { publication ->
        sign publication
    }
    if (!findProperty("signing.keyId")) {
        useGpgCmd()
    }
}

// Publish all the publications
publishing {
    repositories {
        maven {
            url = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
            credentials(PasswordCredentials) {
                username = findProperty('ossrhUsername')
                password = findProperty('ossrhPassword')
            }
        }
    }
}

nexusPublishing.repositories {
    sonatype {
        nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
        snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
        username.set(findProperty('ossrhUsername') as String)
        password.set(findProperty('ossrhPassword') as String)
    }
}

